{"version":3,"sources":["components/common/TextArea/functional/TextArea.module.css","components/Item/functional/Item.module.css","components/Select/functional/Select.module.css","components/common/Title/functional/Title.module.css","components/common/Button/functional/Button.module.css","components/Modal/functional/Modal.module.css","redux/modal/modalConstans.js","redux/modal/modalReducers.js","redux/todosList/todosSelectors.js","components/common/TextArea/ui/TextAreaUI.jsx","components/common/TextArea/functional/TextAreaContainer.jsx","components/Item/ui/ItemUI.jsx","redux/todosList/todosConstans.js","redux/todosList/todosActions.js","components/Item/functional/ItemContainer.jsx","components/Done/ui/DoneUI.jsx","components/Done/functional/DoneContainer.jsx","components/InProcess/ui/InProcessUI.jsx","components/InProcess/functional/InProcessContainer.jsx","components/ToDo/ui/ToDoUI.jsx","components/ToDo/functional/ToDoContainer.jsx","redux/select/selectConstans.js","redux/select/selectReducers.js","redux/todosList/todosReducers.js","redux/store.js","redux/modal/modalActions.js","redux/select/selectSelectors.js","components/Select/ui/SelectUI.jsx","components/Select/functional/SelectContainer.jsx","redux/select/selectActions.js","components/common/Title/ui/TitleUI.jsx","components/common/Title/functional/TitleConatiner.jsx","components/common/Button/ui/ButtonUI.jsx","components/common/Button/functional/ButtonContainer.jsx","components/Modal/ui/ModalUI.jsx","redux/modal/modalSelectors.js","components/Modal/functional/ModalContainer.jsx","components/App/ui/AppUI.jsx","components/App/functional/AppContainer.jsx","hook/useMedia.js","index.js"],"names":["module","exports","modalConstants","initialState","openModal","modalReducer","state","action","type","open","getTodosSelector","todosList","getTodosListSelector","createSelector","itemsList","getIdSelector","prevId","TextAreaUI","text","classes","className","rest","memo","TextAreaContainer","props","styles","ItemUI","handleDisableItemInput","id","handleChangeItemText","disabled","toggleElipsis","handleToggleItemMenu","handleShowItemInput","options","done","handleRemoveItem","handleFalseItemMenu","form","onSubmit","e","itemTextarea","autoFocus","value","onChange","target","buttonSubmit","optionsContainer","onClick","buttonClose","tabIndex","active","onBlur","todosConstants","changeItemStatusDoneAction","payload","ItemContainer","optionsList","dispatch","useDispatch","useCallback","toggleItemAction","preventDefault","falseItemMenuAction","changeItemTextAction","showItemInputAction","disableItemInputAction","removeItemAction","useMemo","map","el","i","menuFunction","menuItem","DoneUI","DoneContainer","useSelector","InProcess","inProcess","InProcessContainer","handleChangeItemStatusTodo","changeItemStatusTodoAction","handleChangeItemStatusDone","inProcessOptions","InProcessUI","ToDoUI","todos","ToDoContainer","handleChangeItemStatusInProcess","changeItemStatusInProcessAction","todoOptions","selectConstans","selectContent","selectReducer","item","todosReducer","concat","filter","reducers","combineReducers","modal","select","persistedState","localStorage","getItem","JSON","parse","store","createStore","closeModalAction","getSelectedContentSelector","SelectUI","handleChangeValue","SelectContainer","useState","setValue","useEffect","showContentAction","TitleUI","TitleConatiner","style","ButtonUI","ButtonContainer","ModalUI","show","closePopup","handleAddToDo","error","isOpen","onRequestClose","ariaHideApp","overlayClassName","modalOverley","modalTextarea","placeholder","buttonAccept","buttonCancel","getModalSelector","ModalContainer","showModal","setError","currentId","handleCloseModal","addNewItemAction","AppUI","handleOpenModal","mobileScreen","ShowContent","AppContainer","matches560","match","matchedMedia","setMatchedMedia","handleChange","matches","matched","window","matchMedia","addEventListener","removeEventListener","useMedia","showContent","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cbc5174.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"TextArea_textarea__JNgqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemTextarea\":\"Item_itemTextarea__1bY6X\",\"optionsContainer\":\"Item_optionsContainer__bWox0\",\"form\":\"Item_form__1rSVB\",\"active\":\"Item_active__fIXZ6\",\"buttonClose\":\"Item_buttonClose__1l1hr\",\"buttonSubmit\":\"Item_buttonSubmit__1njeS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3p9Gj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__3ohyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__Oe6hv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__2mCtE\",\"modalOverley\":\"Modal_modalOverley__ehHk-\",\"buttonAccept\":\"Modal_buttonAccept__1-TjG\",\"buttonCancel\":\"Modal_buttonCancel__2jUaA\",\"modalTextarea\":\"Modal_modalTextarea__1F4xZ\"};","export const modalConstants = {\n    OPEN_MODAL: 'OPEN_MODAL',\n    CLOSE_MODAL: 'CLOSE_MODAL',\n}\n  ","import { modalConstants } from \"./modalConstans\";\n\nconst initialState = {\n    openModal: false,\n}\n\nconst modalReducer = (state = initialState, action) => {\n    switch(action.type) {\n      case modalConstants.OPEN_MODAL:\n        return {\n          open: true,\n        };\n      case modalConstants.CLOSE_MODAL:\n        return {\n          open: false,\n        }\n      default:\n        return state;\n    }\n  }\n  \n  export default modalReducer;","import {createSelector} from \"reselect\";\n\nconst getTodosSelector = state => state.todosList;\n\nexport const getTodosListSelector = createSelector(getTodosSelector, state => state.itemsList);\n\nexport const getIdSelector = createSelector(getTodosSelector, state => state.prevId);\n","import React, {memo} from \"react\";\n\nconst TextAreaUI = ({text, classes, className = '', ...rest}) => {\n  return <textarea className={`${classes['textarea']} ${className}`} {...rest} />\n}\n\nexport default memo(TextAreaUI);\n","import React from 'react';\n\nimport TextAreaUI from '../ui/TextAreaUI';\n\nimport styles from './TextArea.module.css';\n\nconst TextAreaContainer = (props) => {\n  return <TextAreaUI classes={styles} {...props}/>;\n}\n\nexport default TextAreaContainer;\n","import React from 'react'\r\nimport { VscChromeClose } from 'react-icons/vsc';\r\nimport { RiEdit2Line } from 'react-icons/ri';\r\nimport { MdCheckCircle } from 'react-icons/md';\r\nimport TextAreaContainer from '../../common/TextArea/functional/TextAreaContainer';\r\n\r\nexport const ItemUI = ({ handleDisableItemInput, id, handleChangeItemText, text, disabled,\r\n    toggleElipsis, handleToggleItemMenu, handleShowItemInput, options,\r\n    done, handleRemoveItem, classes, handleFalseItemMenu }) => {\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={e => handleDisableItemInput(e, id)}>\r\n            <TextAreaContainer className={classes.itemTextarea} autoFocus={true} value={text} onChange={e => handleChangeItemText(id, e.target.value)} disabled={disabled} />\r\n            {(!disabled) && <button type='submit' className={classes.buttonSubmit}><MdCheckCircle /></button>}\r\n            <div className={classes.optionsContainer}>\r\n                <button onClick={e => handleRemoveItem(e, id)} className={classes.buttonClose}><VscChromeClose /></button>\r\n                {!done && (\r\n                    <ul tabIndex=\"0\" className={toggleElipsis === true ? `${classes.active}` : ''} onClick={() => handleToggleItemMenu(id)} onBlur={(e) => handleFalseItemMenu(e, id)}>...\r\n                        <div>\r\n                            <li onClick={() => handleShowItemInput(id)}><RiEdit2Line /> Edit</li>\r\n                            {options}\r\n                        </div>\r\n                    </ul>\r\n                )}\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n","export const todosConstants = {\n    ADD_ITEM: 'ADD_ITEM',\n    CHANGE_TEXT: 'CHANGE_TEXT',\n    SET_TODO_STATE: 'SET_TODO_STATE',\n    SET_IN_PROCESS_STATE: 'SET_IN_PROCESS_STATE',\n    SET_DONE_STATE: 'SET_DONE_STATE',\n    REMOVE_ITEM: 'REMOVE_ITEM',\n    TOGGLE_ITEM_MENU: 'TOGGLE_ITEM_MENU',\n    DISABLE_ITEM_INPUT: 'DISABLE_ITEM_INPUT',\n    SHOW_ITEM_INPUT: 'SHOW_ITEM_INPUT',\n    FALSE_ITEM_MENU: 'FALSE_ITEM_MENU',\n}\n  ","import {todosConstants} from \"./todosConstans\";\n\nexport const addNewItemAction = (id, text) => ({ type: todosConstants.ADD_ITEM, payload:{id: id, text: text} });\n\nexport const changeItemTextAction = (id, text) => ({ type: todosConstants.CHANGE_TEXT, payload:{id: id, text: text} });\n\nexport const changeItemStatusTodoAction = id => ({ type: todosConstants.SET_TODO_STATE, payload:{id: id} });\n\nexport const changeItemStatusInProcessAction = id => ({ type: todosConstants.SET_IN_PROCESS_STATE, payload:{id: id} });\n\nexport const changeItemStatusDoneAction = id => ({ type: todosConstants.SET_DONE_STATE, payload:{id: id} });\n\nexport const removeItemAction = id => ({ type: todosConstants.REMOVE_ITEM, payload:{id: id} });\n\nexport const toggleItemAction = id => ({ type: todosConstants.TOGGLE_ITEM_MENU, payload:{id: id} });\n\nexport const falseItemMenuAction = id => ({ type: todosConstants.FALSE_ITEM_MENU, payload:{id: id} });\n\nexport const disableItemInputAction = id => ({ type: todosConstants.DISABLE_ITEM_INPUT, payload:{id: id} });\n\nexport const showItemInputAction = id => ({ type: todosConstants.SHOW_ITEM_INPUT, payload:{id: id} });","import React, { useCallback, useMemo } from 'react';\r\nimport { ItemUI } from '../ui/ItemUI';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggleItemAction, changeItemTextAction, showItemInputAction, disableItemInputAction, removeItemAction, falseItemMenuAction } from  '../../../redux/todosList/todosActions';\r\nimport styles from './Item.module.css';\r\nimport { TiArrowForwardOutline } from 'react-icons/ti';\r\n\r\nexport const ItemContainer = ({id, text, toggleElipsis, disabled, optionsList, done}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleToggleItemMenu = useCallback( id => {\r\n            dispatch(toggleItemAction(id));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const handleFalseItemMenu = useCallback( (e,id) => {\r\n        e.preventDefault();\r\n        dispatch(falseItemMenuAction(id));\r\n    },\r\n    [dispatch]\r\n);\r\n\r\n\r\n    const handleChangeItemText = useCallback( (id, text) => {\r\n        dispatch(changeItemTextAction(id, text));\r\n    },\r\n    [dispatch]\r\n    );\r\n\r\n    const handleShowItemInput = useCallback( id => {\r\n        dispatch(showItemInputAction(id));\r\n    },\r\n    [dispatch]\r\n    );\r\n\r\n    const handleDisableItemInput = useCallback( (e, id) => {\r\n        e.preventDefault();\r\n        dispatch(disableItemInputAction(id));\r\n    },\r\n    [dispatch]\r\n    );\r\n\r\n    const handleRemoveItem = useCallback( (e, id) => {\r\n        e.preventDefault();\r\n        dispatch(removeItemAction(id));\r\n    },\r\n    [dispatch]\r\n    );\r\n\r\n    const options = useMemo(() => optionsList && optionsList.map((el, i) => <li key={i} onClick={() => el.menuFunction(id)}><TiArrowForwardOutline />{el.menuItem}</li>), \r\n    [optionsList, id]) \r\n\r\n    return <ItemUI handleDisableItemInput= {handleDisableItemInput}\r\n                   id= {id} \r\n                   handleChangeItemText= {handleChangeItemText} \r\n                   text= {text} \r\n                   disabled= {disabled} \r\n                   toggleElipsis= {toggleElipsis} \r\n                   handleToggleItemMenu= {handleToggleItemMenu} \r\n                   handleShowItemInput= {handleShowItemInput}\r\n                   options= {options}\r\n                   done= {done} \r\n                   handleRemoveItem= {handleRemoveItem} \r\n                   classes= {styles} \r\n                   handleFalseItemMenu= {handleFalseItemMenu} />\r\n}\r\n","import React from 'react';\n\nconst DoneUI = ({done}) => {\n    return (\n        <div className=\"container\">\n            {done}\n        </div>\n    )\n}\n\nexport default DoneUI\n","import React, { useMemo } from 'react'\nimport { useSelector } from 'react-redux';\nimport { getTodosListSelector } from '../../../redux/todosList/todosSelectors';\nimport { ItemContainer } from '../../Item/functional/ItemContainer';\nimport DoneUI from '../ui/DoneUI'\n\nconst DoneContainer = () => {\n\n    const todosList = useSelector(getTodosListSelector);\n\n    const done = useMemo(()=> todosList.map( el => el.done && (\n            <ItemContainer id= {el.id}\n                           text= {el.text}\n                           disabled= {el.disabled}\n                           done= {el.done} \n                           key= {el.id} />)     \n        ), [todosList]) \n\n    return <DoneUI done={done} />\n}\n\nexport default DoneContainer\n","import React from 'react';\n\nconst InProcess = ({inProcess}) => {\n    return (\n        <div className=\"container\">\n            {inProcess}\n        </div>\n    )\n}\n\nexport default InProcess\n","import React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodosListSelector } from '../../../redux/todosList/todosSelectors';\nimport { ItemContainer } from '../../Item/functional/ItemContainer';\nimport InProcessUI from '../ui/InProcessUI';\nimport {changeItemStatusDoneAction, changeItemStatusTodoAction} from '../../../redux/todosList/todosActions';\n\nconst InProcessContainer = () => {\n\n    const todosList = useSelector(getTodosListSelector);\n\n    const dispatch = useDispatch();\n\n    const handleChangeItemStatusTodo = useCallback( id => {\n        dispatch(changeItemStatusTodoAction(id));\n    },\n    [dispatch]\n    );\n\n    const handleChangeItemStatusDone = useCallback( id => {\n        dispatch(changeItemStatusDoneAction(id));\n    },\n    [dispatch]\n    );\n\n    const inProcessOptions = useMemo(() => [\n        {\n        menuItem: 'ToDo',\n        menuFunction: handleChangeItemStatusTodo,\n        },\n        {\n        menuItem: 'Done',\n        menuFunction: handleChangeItemStatusDone,\n        }\n    ], [handleChangeItemStatusTodo, handleChangeItemStatusDone]);\n\n    const inProcess = useMemo(()=> todosList.map( el => el.inProcess && (\n            <ItemContainer id= {el.id}\n                           text= {el.text}\n                           toggleElipsis= {el.toggleElipsis}\n                           disabled= {el.disabled}\n                           optionsList= {inProcessOptions} \n                           done= {el.done} \n                           key= {el.id} />)     \n        ), [todosList, inProcessOptions]) \n\n    return  <InProcessUI inProcess={inProcess} />\n}\n\nexport default InProcessContainer\n","import React from 'react';\n\nconst ToDoUI = ({todos}) => {\n    return (\n        <div className=\"container\"> \n            {todos}\n        </div>\n    )\n}\n\nexport default ToDoUI\n","import React, { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport ToDoUI from '../ui/ToDoUI';\nimport {getTodosListSelector} from '../../../redux/todosList/todosSelectors';\nimport { changeItemStatusInProcessAction, changeItemStatusDoneAction } from '../../../redux/todosList/todosActions';\nimport { ItemContainer } from '../../Item/functional/ItemContainer';\n\nconst ToDoContainer = () => {\n\n    const todosList = useSelector(getTodosListSelector);\n\n    const dispatch = useDispatch();\n\n    const handleChangeItemStatusInProcess = useCallback( id => {\n        dispatch(changeItemStatusInProcessAction(id));\n    },\n    [dispatch]\n    );\n\n    const handleChangeItemStatusDone = useCallback( id => {\n        dispatch(changeItemStatusDoneAction(id));\n    },\n    [dispatch]\n    );\n\n    const todoOptions = useMemo(() => [\n        {\n        menuItem: 'In process',\n        menuFunction: handleChangeItemStatusInProcess,\n        },\n        {\n        menuItem: 'Done',\n        menuFunction: handleChangeItemStatusDone,\n        }\n    ], [handleChangeItemStatusInProcess, handleChangeItemStatusDone])\n\n    const todos = useMemo(()=> todosList.map( el => (el.inProcess === false && el.done ===false) && (\n            <ItemContainer id= {el.id}\n                           text= {el.text}\n                           toggleElipsis= {el.toggleElipsis}\n                           disabled= {el.disabled}\n                           optionsList= {todoOptions} \n                           done= {el.done} \n                           key= {el.id} />)     \n        ), [todosList, todoOptions]);\n        return <ToDoUI todos= {todos}/>\n}\n\nexport default ToDoContainer\n","export const selectConstans = {\n    SHOW_TODO: 'TODO',\n    SHOW_IN_PROCESS: 'IN PROCESS',\n    SHOW_DONE: 'DONE',\n}\n  ","import DoneContainer from \"../../components/Done/functional/DoneContainer\";\nimport InProcessContainer from \"../../components/InProcess/functional/InProcessContainer\";\nimport ToDoContainer from \"../../components/ToDo/functional/ToDoContainer\";\nimport { selectConstans } from \"./selectConstans\";\n\nconst initialState = {\n    selectContent: ToDoContainer,\n}\n\nconst selectReducer = (state = initialState, action) => {\n    switch(action.type) {\n      case selectConstans.SHOW_TODO:\n        return {\n          selectContent: ToDoContainer,\n        };\n      case selectConstans.SHOW_IN_PROCESS:\n        return {\n          selectContent: InProcessContainer,\n        };\n      case selectConstans.SHOW_DONE:\n        return {\n          selectContent: DoneContainer,\n        }  \n      default:\n        return state;\n    }\n  }\n  \n  export default selectReducer;","import { todosConstants } from \"./todosConstans\";\n\nconst initialState = {\n  itemsList: [],\n  item: {\n    id: null,\n    text: '',\n    inProcess: false,\n    done: false,\n    toggleElipsis: false,\n    disabled: true,\n  },\n  prevId: 0,\n}\n\nconst todosReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case todosConstants.ADD_ITEM:\n      return {\n        ...state,\n        itemsList: [...state.itemsList].concat({ ...state.item, id: action.payload.id, text: action.payload.text, disabled: true }),\n        prevId: action.payload.id,\n      };\n    case todosConstants.CHANGE_TEXT:\n      return {\n        ...state,\n        itemsList: state.itemsList.map(item => item.id === action.payload.id ? { ...item, text: action.payload.text } : item)\n      };\n    case todosConstants.SET_TODO_STATE:\n      return {\n        ...state,\n        itemsList: state.itemsList.map(item => item.id === action.payload.id ? { ...item, inProcess: false, done: false } : item)\n      };\n    case todosConstants.SET_IN_PROCESS_STATE:\n      return {\n        ...state,\n        itemsList: state.itemsList.map(item => item.id === action.payload.id ? { ...item, inProcess: true } : item)\n      };\n    case todosConstants.SET_DONE_STATE:\n      return {\n        ...state,\n        itemsList: state.itemsList.map(item => item.id === action.payload.id ? { ...item, inProcess: false, done: true } : item)\n      };\n    case todosConstants.REMOVE_ITEM:\n      return {\n        ...state,\n        itemsList: state.itemsList.filter(item => item.id !== action.payload.id)\n      };\n    case todosConstants.TOGGLE_ITEM_MENU:\n      return {\n        ...state,\n        itemsList: state.itemsList.map(item => item.id === action.payload.id ? { ...item, toggleElipsis: !item.toggleElipsis } : item)\n      };\n    case todosConstants.FALSE_ITEM_MENU:\n      return {\n        ...state,\n        itemsList: state.itemsList.map(item => item.id === action.payload.id ? { ...item, toggleElipsis: false } : item)\n      };\n    case todosConstants.DISABLE_ITEM_INPUT:\n      return {\n        ...state,\n        itemsList: state.itemsList.map(item => item.id === action.payload.id ? { ...item, disabled: true } : item)\n      };\n    case todosConstants.SHOW_ITEM_INPUT:\n      return {\n        ...state,\n        itemsList: state.itemsList.map(item => item.id === action.payload.id ? { ...item, disabled: false } : item)\n      };\n    default:\n      return state;\n  }\n}\n\nexport default todosReducer;","import { combineReducers, createStore } from \"redux\";\nimport modalReducer from \"./modal/modalReducers\";\nimport selectReducer from \"./select/selectReducers\";\nimport todosReducer from \"./todosList/todosReducers\"\n\nconst reducers = combineReducers({\n    todosList: todosReducer,\n    modal: modalReducer,\n    select: selectReducer,\n});\n\nconst persistedState = localStorage.getItem('reduxState') ? \n                            JSON.parse(localStorage.getItem('reduxState'))\n                            : \n                            {}\n\nexport const rootReducer = (state, action) => {\n    return reducers(state, action);\n};\n\nconst store = createStore(rootReducer, persistedState);\n\nexport default store;","import {modalConstants} from \"./modalConstans\";\n\nexport const openModalAction = () => ({ type: modalConstants.OPEN_MODAL });\n\nexport const closeModalAction = () => ({ type: modalConstants.CLOSE_MODAL });\n","import {createSelector} from \"reselect\";\n\nconst getSelectsSelector = state => state.select;\n\nexport const getSelectedContentSelector = createSelector(getSelectsSelector, state => state.selectContent);\n","import React from 'react';\r\nimport { selectConstans } from '../../../redux/select/selectConstans';\r\n\r\nconst SelectUI = ({ handleChangeValue, classes, value }) => {\r\n  return (\r\n    <select onChange={handleChangeValue} className={classes['select']} value={value}>\r\n      <option value={selectConstans.SHOW_TODO}>TODO</option>\r\n      <option value={selectConstans.SHOW_IN_PROCESS}>IN PROCESS</option>\r\n      <option value={selectConstans.SHOW_DONE}>DONE</option>\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default SelectUI\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { showContentAction } from '../../../redux/select/selectActions';\r\nimport { selectConstans } from '../../../redux/select/selectConstans';\r\nimport SelectUI from '../ui/SelectUI';\r\nimport styles from './Select.module.css';\r\n\r\nconst SelectContainer = () => {\r\n\r\n  const [value, setValue] = useState(selectConstans.SHOW_TODO);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeValue = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  }, [setValue]);\r\n\r\n  useEffect(()=>{\r\n    dispatch(showContentAction(value));\r\n  }, [value, dispatch])\r\n\r\n  return <SelectUI classes={styles} handleChangeValue={handleChangeValue} value={value} />\r\n}\r\n\r\nexport default SelectContainer\r\n","export const showContentAction = value => ({ type: value });\n","import React from 'react'\r\n\r\nexport const TitleUI = ({value, classes, className}) => <h3 className={`${classes['title']} ${className}`}>{value}</h3>\r\n","import React from 'react';\r\nimport { TitleUI } from '../ui/TitleUI';\r\nimport style from './Title.module.css';\r\n\r\nexport const TitleConatiner = ({value, className}) => <TitleUI value={value} className={className} classes={style} />\r\n","import React, {memo} from \"react\";\r\n\r\nconst ButtonUI = ({text, classes, className = '', ...rest}) => {\r\n  return <button className={`${classes['button']} ${className}`} {...rest}>\r\n    {text}\r\n  </button>\r\n}\r\n\r\nexport default memo(ButtonUI);\r\n","import React from 'react';\r\n\r\nimport ButtonUI from '../ui/ButtonUI';\r\n\r\nimport styles from './Button.module.css';\r\n\r\nconst ButtonContainer = (props) => {\r\n  return <ButtonUI classes={styles} {...props}/>;\r\n}\r\n\r\nexport default ButtonContainer;\r\n","import React from 'react';\nimport Modal from 'react-modal';\nimport ButtonContainer from '../../common/Button/functional/ButtonContainer';\nimport TextAreaContainer from '../../common/TextArea/functional/TextAreaContainer';\nimport { TitleConatiner } from '../../common/Title/functional/TitleConatiner';\n\nconst ModalUI = ({ show, closePopup, value, handleAddToDo, handleChangeValue, error, classes }) => {\n    return (\n        <Modal\n            isOpen={show}\n            onRequestClose={closePopup}\n            ariaHideApp={false}\n            className={classes.modal}\n            overlayClassName={classes.modalOverley}>\n            <TitleConatiner value='Add Task' />\n            <form onSubmit={handleAddToDo}>\n                <TextAreaContainer value={value} onChange={handleChangeValue} className={classes.modalTextarea} placeholder='Write something...' />\n                {error && <div>Enter task</div>}\n                <div>\n                    <ButtonContainer text='Save' type='submit' className={classes.buttonAccept} />\n                    <ButtonContainer text='Cancel' onClick={closePopup} className={classes.buttonCancel} />\n                </div>\n            </form>\n        </Modal>\n    )\n}\n\nexport default ModalUI","import {createSelector} from \"reselect\";\n\nconst getModalsSelector = state => state.modal;\n\nexport const getModalSelector = createSelector(getModalsSelector, modal => modal.open);\n","import React, { useCallback, useState } from 'react'\nimport ModalUI from '../ui/ModalUI'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getModalSelector} from '../../../redux/modal/modalSelectors';\nimport {closeModalAction} from '../../../redux/modal/modalActions';\nimport { addNewItemAction } from '../../../redux/todosList/todosActions';\nimport { getIdSelector } from '../../../redux/todosList/todosSelectors';\nimport styles from \"./Modal.module.css\";\n\nconst ModalContainer = () => {\n\nconst showModal = useSelector(getModalSelector);\nconst [value, setValue] = useState('');\nconst [error, setError] = useState(false)\nlet id = useSelector(getIdSelector);\nlet currentId = ++id;\n\nconst dispatch = useDispatch();\n\nconst handleCloseModal = useCallback(() => {\n    dispatch(closeModalAction());\n    setValue('');\n    setError(false);\n  }, [dispatch]);\n\nconst handleChangeValue = useCallback((e) => {\n    setValue(e.target.value);\n    setError(false);\n  }, [setValue]);\n\nconst  handleAddToDo = useCallback((e)=>{\n  e.preventDefault();\n  if(!value){\n      setError(true);\n  }\n  else {\n      dispatch(addNewItemAction(currentId, value));\n      setValue('');\n      setError(false);\n      dispatch(closeModalAction());\n  }\n}, [dispatch, value, currentId]) \n\nreturn <ModalUI show={showModal} \n                closePopup={handleCloseModal}\n                value={value}\n                handleChangeValue={handleChangeValue} \n                handleAddToDo={handleAddToDo}\n                error={error}\n                classes= {styles} />\n}\n\nexport default ModalContainer\n","import React from 'react';\r\nimport SelectContainer from '../../Select/functional/SelectContainer';\r\nimport { TitleConatiner } from '../../common/Title/functional/TitleConatiner';\r\nimport ToDoContainer from '../../ToDo/functional/ToDoContainer';\r\nimport InProcessContainer from '../../InProcess/functional/InProcessContainer';\r\nimport DoneContainer from '../../Done/functional/DoneContainer';\r\nimport ModalContainer from '../../Modal/functional/ModalContainer';\r\nimport ButtonContainer from '../../common/Button/functional/ButtonContainer';\r\n\r\nconst AppUI = ({ handleOpenModal, mobileScreen, ShowContent }) => {\r\n  return (\r\n    <>\r\n      <ButtonContainer text='+ Task' onClick={handleOpenModal} className='button-fixed' />\r\n      <h1 className='main-title'>TODO APP</h1>\r\n      { mobileScreen ? (\r\n        <>\r\n          <SelectContainer />\r\n          {ShowContent && <ShowContent />}\r\n        </>\r\n        )\r\n        :\r\n        (\r\n          <div className=\"wrapper\">\r\n            <div>\r\n              <TitleConatiner value='TODO' />\r\n              <ToDoContainer />\r\n            </div>\r\n            <div>\r\n              <TitleConatiner value='IN PROCESS' />\r\n              <InProcessContainer />\r\n            </div>\r\n            <div>\r\n              <TitleConatiner value='DONE' />\r\n              <DoneContainer />\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n      <ModalContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppUI;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useMedia } from '../../../hook/useMedia';\r\nimport { openModalAction } from '../../../redux/modal/modalActions';\r\nimport { getSelectedContentSelector } from '../../../redux/select/selectSelectors';\r\nimport AppUI from '../ui/AppUI';\r\nimport './App.css';\r\n\r\nconst AppContainer = () => {\r\n\r\n  const matches560 = useMedia('(max-width: 560px)');\r\n\r\n  const showContent = useSelector(getSelectedContentSelector);\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const handleOpenModal = useCallback(() => {\r\n    dispatch(openModalAction())\r\n  }, [dispatch]);\r\n\r\n  return <AppUI handleOpenModal= {handleOpenModal} mobileScreen= {matches560} ShowContent={showContent} />\r\n}\r\n\r\nexport default AppContainer;\r\n","import {useCallback, useEffect, useState} from \"react\";\n\nexport const useMedia = (match) => {\n  const [matchedMedia, setMatchedMedia] = useState(false);\n\n  const handleChange = useCallback(e => {\n    setMatchedMedia(e.matches);\n  }, []);\n\n  useEffect(() => {\n    let matched = null;\n    if (window.matchMedia) {\n      matched = window.matchMedia(match)\n      if (matched) {\n        setMatchedMedia(matched.matches);\n        if(matched.addEventListener) {\n          matched.addEventListener('change', handleChange)\n        }\n        return () => {\n          if(matched.removeEventListener) {\n            matched.removeEventListener('change', handleChange);\n          }\n        }\n      }\n    }\n    else {\n      setMatchedMedia(false);\n    }\n  }, [handleChange, match]);\n  \n  return matchedMedia;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport AppContainer from './components/App/functional/AppContainer';\n\nstore.subscribe(() => {\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}