{"version":3,"sources":["components/Select/functional/Select.module.css","components/common/Title/functional/Title.module.css","components/common/TextArea/functional/TextArea.module.css","components/Item/functional/Item.module.css","components/common/Button/functional/Button.module.css","components/Modal/functional/Modal.module.css","redux/modal/modalConstans.js","redux/modal/modalReducers.js","redux/todosList/todosConstans.js","redux/todosList/todosReducers.js","redux/store.js","redux/modal/modalActions.js","constans/routes.js","components/Select/ui/SelectUI.jsx","components/Select/functional/SelectContainer.jsx","components/common/Title/ui/TitleUI.jsx","components/common/Title/functional/TitleConatiner.jsx","components/ToDo/ui/ToDoUI.jsx","redux/todosList/todosSelectors.js","redux/todosList/todosActions.js","components/common/TextArea/ui/TextAreaUI.jsx","components/common/TextArea/functional/TextAreaContainer.jsx","components/Item/ui/ItemUI.jsx","components/Item/functional/ItemContainer.jsx","components/ToDo/functional/ToDoContainer.jsx","components/InProcess/ui/InProcessUI.jsx","components/InProcess/functional/InProcessContainer.jsx","components/Done/ui/DoneUI.jsx","components/Done/functional/DoneContainer.jsx","components/common/Button/ui/ButtonUI.jsx","components/common/Button/functional/ButtonContainer.jsx","components/Modal/ui/ModalUI.jsx","redux/modal/modalSelectors.js","components/Modal/functional/ModalContainer.jsx","components/App/ui/AppUI.jsx","components/App/functional/AppContainer.jsx","hook/useMedia.js","index.js"],"names":["module","exports","modalConstants","initialState","openModal","modalReducer","state","action","type","open","todosConstants","itemsList","item","id","text","inProcess","done","toggleElipsis","disabled","nextId","todosReducer","concat","payload","map","filter","reducers","combineReducers","todosList","modal","persistedState","localStorage","getItem","JSON","parse","store","createStore","closeModal","routes","SelectUI","handleChangeValue","classes","onChange","className","value","SelectContainer","history","useHistory","styles","e","push","target","TitleUI","TitleConatiner","style","ToDoUI","todos","getTodosSelector","getTodosListSelector","createSelector","getIdSelector","changeItemStatusDone","TextAreaUI","rest","memo","TextAreaContainer","props","ItemUI","handleDisableItemInput","handleChangeItemText","handleToggleItemMenu","handleShowItemInput","options","handleRemoveItem","handleFalseItemMenu","form","onSubmit","itemTextarea","autoFocus","buttonSubmit","optionsContainer","onClick","buttonClose","tabIndex","active","onBlur","ItemContainer","optionsList","dispatch","useDispatch","useCallback","toggleItem","preventDefault","falseItemMenu","changeItemText","showItemInput","disableItemInput","removeItem","useMemo","el","i","menuFunction","menuItem","ToDoContainer","useSelector","handleChangeItemStatusInProcess","changeItemStatusInProcess","handleChangeItemStatusDone","todoOptions","InProcess","InProcessContainer","handleChangeItemStatusTodo","changeItemStatusTodo","inProcessOptions","InProcessUI","DoneUI","DoneContainer","ButtonUI","ButtonContainer","ModalUI","show","closePopup","handleAddToDo","error","isOpen","onRequestClose","ariaHideApp","overlayClassName","modalOverley","modalTextarea","placeholder","buttonAccept","buttonCancel","getModalSelector","ModalContainer","showModal","useState","setValue","setError","currentId","handleCloseModal","addNewItem","AppUI","handleOpenModal","mobileScreen","exact","path","component","to","AppContainer","matches560","match","matched","setMatched","handleChange","matches","useEffect","window","matchMedia","addEventListener","removeEventListener","useMedia","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.197e26bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3p9Gj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__3ohyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"TextArea_textarea__JNgqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemTextarea\":\"Item_itemTextarea__1bY6X\",\"optionsContainer\":\"Item_optionsContainer__bWox0\",\"form\":\"Item_form__1rSVB\",\"active\":\"Item_active__fIXZ6\",\"buttonClose\":\"Item_buttonClose__1l1hr\",\"buttonSubmit\":\"Item_buttonSubmit__1njeS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__Oe6hv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__2mCtE\",\"modalOverley\":\"Modal_modalOverley__ehHk-\",\"buttonAccept\":\"Modal_buttonAccept__1-TjG\",\"buttonCancel\":\"Modal_buttonCancel__2jUaA\",\"modalTextarea\":\"Modal_modalTextarea__1F4xZ\"};","export const modalConstants = {\n    OPEN_MODAL: 'OPEN_MODAL',\n    CLOSE_MODAL: 'CLOSE_MODAL',\n}\n  ","import { modalConstants } from \"./modalConstans\";\n\nconst initialState = {\n    openModal: false,\n}\n\nconst modalReducer = (state = initialState, action) => {\n    switch(action.type) {\n      case modalConstants.OPEN_MODAL:\n        return {\n          open: true,\n        };\n      case modalConstants.CLOSE_MODAL:\n        return {\n          open: false,\n        }\n      default:\n        return state;\n    }\n  }\n  \n  export default modalReducer;","export const todosConstants = {\n    ADD_ITEM: 'ADD_ITEM',\n    CHANGE_TEXT: 'CHANGE_TEXT',\n    SET_TODO_STATE: 'SET_TODO_STATE',\n    SET_IN_PROCESS_STATE: 'SET_IN_PROCESS_STATE',\n    SET_DONE_STATE: 'SET_DONE_STATE',\n    REMOVE_ITEM: 'REMOVE_ITEM',\n    TOGGLE_ITEM_MENU: 'TOGGLE_ITEM_MENU',\n    DISABLE_ITEM_INPUT: 'DISABLE_ITEM_INPUT',\n    SHOW_ITEM_INPUT: 'SHOW_ITEM_INPUT',\n    FALSE_ITEM_MENU: 'FALSE_ITEM_MENU',\n}\n  ","import { todosConstants } from \"./todosConstans\";\n\nconst initialState = {\n  itemsList: [],\n  item: {\n    id: null,\n    text: '',\n    inProcess: false,\n    done: false,\n    toggleElipsis: false,\n    disabled: true,\n  },\n  nextId: 0,\n}\n\nconst todosReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case todosConstants.ADD_ITEM:\n      return {\n        ...state,\n        itemsList: [...state.itemsList].concat({ ...state.item, id: action.payload.id, text: action.payload.text, disabled: true }),\n        nextId: action.payload.id,\n      };\n    case todosConstants.CHANGE_TEXT:\n      return {\n        ...state,\n        itemsList: [...state.itemsList.map(item => item.id === action.payload.id ? { ...item, text: action.payload.text } : item)]\n      };\n    case todosConstants.SET_TODO_STATE:\n      return {\n        ...state,\n        itemsList: [...state.itemsList.map(item => item.id === action.payload.id ? { ...item, inProcess: false, done: false } : item)]\n      };\n    case todosConstants.SET_IN_PROCESS_STATE:\n      return {\n        ...state,\n        itemsList: [...state.itemsList.map(item => item.id === action.payload.id ? { ...item, inProcess: true } : item)]\n      };\n    case todosConstants.SET_DONE_STATE:\n      return {\n        ...state,\n        itemsList: [...state.itemsList.map(item => item.id === action.payload.id ? { ...item, inProcess: false, done: true } : item)]\n      };\n    case todosConstants.REMOVE_ITEM:\n      return {\n        ...state,\n        itemsList: [...state.itemsList.filter(item => item.id !== action.payload.id)]\n      };\n    case todosConstants.TOGGLE_ITEM_MENU:\n      return {\n        ...state,\n        itemsList: [...state.itemsList.map(item => item.id === action.payload.id ? { ...item, toggleElipsis: !item.toggleElipsis } : item)]\n      };\n    case todosConstants.FALSE_ITEM_MENU:\n      return {\n        ...state,\n        itemsList: [...state.itemsList.map(item => item.id === action.payload.id ? { ...item, toggleElipsis: false } : item)]\n      };\n    case todosConstants.DISABLE_ITEM_INPUT:\n      return {\n        ...state,\n        itemsList: [...state.itemsList.map(item => item.id === action.payload.id ? { ...item, disabled: true } : item)]\n      };\n    case todosConstants.SHOW_ITEM_INPUT:\n      return {\n        ...state,\n        itemsList: [...state.itemsList.map(item => item.id === action.payload.id ? { ...item, disabled: false } : item)]\n      };\n    default:\n      return state;\n  }\n}\n\nexport default todosReducer;","import { combineReducers, createStore } from \"redux\";\nimport modalReducer from \"./modal/modalReducers\";\nimport todosReducer from \"./todosList/todosReducers\"\n\nconst reducers = combineReducers({\n    todosList: todosReducer,\n    modal: modalReducer,\n});\n\nconst persistedState = localStorage.getItem('reduxState') \n                       ? JSON.parse(localStorage.getItem('reduxState'))\n                       : {}\n\nexport const rootReducer = (state, action) => {\n    return reducers(state, action);\n};\n\nconst store = createStore(rootReducer, persistedState);\n\nexport default store;","import {modalConstants} from \"./modalConstans\";\n\nexport const openModal = () => ({ type: modalConstants.OPEN_MODAL });\n\nexport const closeModal = () => ({ type: modalConstants.CLOSE_MODAL });\n","export const routes = {\r\n    todo: '/',\r\n    inProcess: '/inProcess',\r\n    done: '/done',\r\n  };\r\n  ","import React from 'react';\r\nimport { routes } from '../../../constans/routes';\r\n\r\nconst SelectUI = ({ handleChangeValue, classes }) => {\r\n  return (\r\n    <select onChange={handleChangeValue} className={classes['select']}>\r\n      <option value={routes.todo}>TODO</option>\r\n      <option value={routes.inProcess}>IN PROCESS</option>\r\n      <option value={routes.done}>DONE</option>\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default SelectUI\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport SelectUI from '../ui/SelectUI';\r\nimport styles from './Select.module.css';\r\n\r\nconst SelectContainer = () => {\r\n\r\n  let history = useHistory();\r\n\r\n  function handleChangeValue(e) {\r\n    history.push(`${e.target.value}`);\r\n  }\r\n\r\n  return <SelectUI classes={styles} handleChangeValue={handleChangeValue} />\r\n}\r\n\r\nexport default SelectContainer\r\n","import React from 'react'\r\n\r\nexport const TitleUI = ({value, classes, className}) => <h3 className={`${classes['title']} ${className}`}>{value}</h3>\r\n","import React from 'react';\r\nimport { TitleUI } from '../ui/TitleUI';\r\nimport style from './Title.module.css';\r\n\r\nexport const TitleConatiner = ({value, className}) => <TitleUI value={value} className={className} classes={style} />\r\n","import React from 'react';\n\nconst ToDoUI = ({todos}) => {\n    return (\n        <div className=\"container\"> \n            {todos}\n        </div>\n    )\n}\n\nexport default ToDoUI\n","import {createSelector} from \"reselect\";\n\nconst getTodosSelector = state => state.todosList;\n\nexport const getTodosListSelector = createSelector(getTodosSelector, state => state.itemsList);\n\nexport const getIdSelector = createSelector(getTodosSelector, state => state.nextId);\n","import {todosConstants} from \"./todosConstans\";\n\nexport const addNewItem = (id, text) => ({ type: todosConstants.ADD_ITEM, payload:{id: id, text: text} });\n\nexport const changeItemText = (id, text) => ({ type: todosConstants.CHANGE_TEXT, payload:{id: id, text: text} });\n\nexport const changeItemStatusTodo = id => ({ type: todosConstants.SET_TODO_STATE, payload:{id: id} });\n\nexport const changeItemStatusInProcess = id => ({ type: todosConstants.SET_IN_PROCESS_STATE, payload:{id: id} });\n\nexport const changeItemStatusDone = id => ({ type: todosConstants.SET_DONE_STATE, payload:{id: id} });\n\nexport const removeItem = id => ({ type: todosConstants.REMOVE_ITEM, payload:{id: id} });\n\nexport const toggleItem = id => ({ type: todosConstants.TOGGLE_ITEM_MENU, payload:{id: id} });\n\nexport const falseItemMenu = id => ({ type: todosConstants.FALSE_ITEM_MENU, payload:{id: id} });\n\nexport const disableItemInput = id => ({ type: todosConstants.DISABLE_ITEM_INPUT, payload:{id: id} });\n\nexport const showItemInput = id => ({ type: todosConstants.SHOW_ITEM_INPUT, payload:{id: id} });","import React, {memo} from \"react\";\n\nconst TextAreaUI = ({text, classes, className = '', ...rest}) => {\n  return <textarea className={`${classes['textarea']} ${className}`} {...rest} />\n}\n\nexport default memo(TextAreaUI);\n","import React from 'react';\n\nimport TextAreaUI from '../ui/TextAreaUI';\n\nimport styles from './TextArea.module.css';\n\nconst TextAreaContainer = (props) => {\n  return <TextAreaUI classes={styles} {...props}/>;\n}\n\nexport default TextAreaContainer;\n","import React from 'react'\r\nimport { VscChromeClose } from 'react-icons/vsc';\r\nimport { RiEdit2Line } from 'react-icons/ri';\r\nimport { MdCheckCircle } from 'react-icons/md';\r\nimport TextAreaContainer from '../../common/TextArea/functional/TextAreaContainer';\r\n\r\nexport const ItemUI = ({ handleDisableItemInput, id, handleChangeItemText, text, disabled,\r\n    toggleElipsis, handleToggleItemMenu, handleShowItemInput, options,\r\n    done, handleRemoveItem, classes, handleFalseItemMenu }) => {\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={e => handleDisableItemInput(e, id)}>\r\n            <TextAreaContainer className={classes.itemTextarea} autoFocus={true} value={text} onChange={e => handleChangeItemText(id, e.target.value)} disabled={disabled} />\r\n            {(!disabled) && <button type='submit' className={classes.buttonSubmit}><MdCheckCircle /></button>}\r\n            <div className={classes.optionsContainer}>\r\n                <button onClick={e => handleRemoveItem(e, id)} className={classes.buttonClose}><VscChromeClose /></button>\r\n                {!done && (\r\n                    <ul tabIndex=\"0\" className={toggleElipsis === true ? `${classes.active}` : ''} onClick={() => handleToggleItemMenu(id)} onBlur={(e) => handleFalseItemMenu(e, id)}>...\r\n                        <div>\r\n                            <li onClick={() => handleShowItemInput(id)}><RiEdit2Line /> Edit</li>\r\n                            {options}\r\n                        </div>\r\n                    </ul>\r\n                )}\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport { ItemUI } from '../ui/ItemUI';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggleItem, changeItemText, showItemInput, disableItemInput, removeItem, falseItemMenu } from  '../../../redux/todosList/todosActions';\r\nimport styles from './Item.module.css';\r\nimport { TiArrowForwardOutline } from 'react-icons/ti';\r\n\r\nexport const ItemContainer = ({id, text, toggleElipsis, disabled, optionsList, done, autoFocus}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleToggleItemMenu = useCallback( id => {\r\n            dispatch(toggleItem(id));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const handleFalseItemMenu = useCallback( (e,id) => {\r\n        e.preventDefault();\r\n        dispatch(falseItemMenu(id));\r\n    },\r\n    [dispatch]\r\n);\r\n\r\n\r\n    const handleChangeItemText = useCallback( (id, text) => {\r\n        dispatch(changeItemText(id, text));\r\n    },\r\n    [dispatch]\r\n    );\r\n\r\n    const handleShowItemInput = useCallback( id => {\r\n        dispatch(showItemInput(id));\r\n    },\r\n    [dispatch]\r\n    );\r\n\r\n    const handleDisableItemInput = useCallback( (e, id) => {\r\n        e.preventDefault();\r\n        dispatch(disableItemInput(id));\r\n    },\r\n    [dispatch]\r\n    );\r\n\r\n    const handleRemoveItem = useCallback( (e, id) => {\r\n        e.preventDefault();\r\n        dispatch(removeItem(id));\r\n    },\r\n    [dispatch]\r\n    );\r\n\r\n    const options = useMemo(() => optionsList && optionsList.map((el, i) => <li key={i} onClick={() => el.menuFunction(id)}><TiArrowForwardOutline />{el.menuItem}</li>), \r\n    [optionsList, id]) \r\n\r\n    return <ItemUI handleDisableItemInput= {handleDisableItemInput}\r\n                   id= {id} \r\n                   handleChangeItemText= {handleChangeItemText} \r\n                   text= {text} \r\n                   disabled= {disabled} \r\n                   toggleElipsis= {toggleElipsis} \r\n                   handleToggleItemMenu= {handleToggleItemMenu} \r\n                   handleShowItemInput= {handleShowItemInput}\r\n                   options= {options}\r\n                   done= {done} \r\n                   handleRemoveItem= {handleRemoveItem} \r\n                   classes= {styles} \r\n                   handleFalseItemMenu= {handleFalseItemMenu} />\r\n}\r\n","import React, { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport ToDoUI from '../ui/ToDoUI';\nimport {getTodosListSelector} from '../../../redux/todosList/todosSelectors';\nimport { changeItemStatusInProcess, changeItemStatusDone } from '../../../redux/todosList/todosActions';\nimport { ItemContainer } from '../../Item/functional/ItemContainer';\n\nconst ToDoContainer = () => {\n\n    const todosList = useSelector(getTodosListSelector);\n\n    const dispatch = useDispatch();\n\n    const handleChangeItemStatusInProcess = useCallback( id => {\n        dispatch(changeItemStatusInProcess(id));\n    },\n    [dispatch]\n    );\n\n    const handleChangeItemStatusDone = useCallback( id => {\n        dispatch(changeItemStatusDone(id));\n    },\n    [dispatch]\n    );\n\n    const todoOptions = useMemo(() => [\n        {\n        menuItem: 'In process',\n        menuFunction: handleChangeItemStatusInProcess,\n        },\n        {\n        menuItem: 'Done',\n        menuFunction: handleChangeItemStatusDone,\n        }\n    ], [handleChangeItemStatusInProcess, handleChangeItemStatusDone])\n\n    const todos = useMemo(()=> todosList.map( el => (el.inProcess === false && el.done ===false) && (\n            <ItemContainer id= {el.id}\n                           text= {el.text}\n                           toggleElipsis= {el.toggleElipsis}\n                           disabled= {el.disabled}\n                           optionsList= {todoOptions} \n                           done= {el.done} \n                           key= {el.id} />)     \n        ), [todosList, todoOptions]);\n    \n    return <ToDoUI todos= {todos}/>\n}\n\nexport default ToDoContainer\n","import React from 'react';\n\nconst InProcess = ({inProcess}) => {\n    return (\n        <div className=\"container\">\n            {inProcess}\n        </div>\n    )\n}\n\nexport default InProcess\n","import React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodosListSelector } from '../../../redux/todosList/todosSelectors';\nimport { ItemContainer } from '../../Item/functional/ItemContainer';\nimport InProcessUI from '../ui/InProcessUI';\nimport {changeItemStatusDone, changeItemStatusTodo} from '../../../redux/todosList/todosActions';\n\nconst InProcessContainer = () => {\n\n    const todosList = useSelector(getTodosListSelector);\n\n    const dispatch = useDispatch();\n\n    const handleChangeItemStatusTodo = useCallback( id => {\n        dispatch(changeItemStatusTodo(id));\n    },\n    [dispatch]\n    );\n\n    const handleChangeItemStatusDone = useCallback( id => {\n        dispatch(changeItemStatusDone(id));\n    },\n    [dispatch]\n    );\n\n    const inProcessOptions = useMemo(() => [\n        {\n        menuItem: 'ToDo',\n        menuFunction: handleChangeItemStatusTodo,\n        },\n        {\n        menuItem: 'Done',\n        menuFunction: handleChangeItemStatusDone,\n        }\n    ], [handleChangeItemStatusTodo, handleChangeItemStatusDone]);\n\n    const inProcess = useMemo(()=> todosList.map( el => el.inProcess && (\n            <ItemContainer id= {el.id}\n                           text= {el.text}\n                           toggleElipsis= {el.toggleElipsis}\n                           disabled= {el.disabled}\n                           optionsList= {inProcessOptions} \n                           done= {el.done} \n                           key= {el.id} />)     \n        ), [todosList, inProcessOptions]) \n\n    return  <InProcessUI inProcess={inProcess} />\n}\n\nexport default InProcessContainer\n","import React from 'react';\n\nconst DoneUI = ({done}) => {\n    return (\n        <div className=\"container\">\n            {done}\n        </div>\n    )\n}\n\nexport default DoneUI\n","import React, { useMemo } from 'react'\nimport { useSelector } from 'react-redux';\nimport { getTodosListSelector } from '../../../redux/todosList/todosSelectors';\nimport { ItemContainer } from '../../Item/functional/ItemContainer';\nimport DoneUI from '../ui/DoneUI'\n\nconst DoneContainer = () => {\n\n    const todosList = useSelector(getTodosListSelector);\n\n    const done = useMemo(()=> todosList.map( el => el.done && (\n            <ItemContainer id= {el.id}\n                           text= {el.text}\n                           disabled= {el.disabled}\n                           done= {el.done} \n                           key= {el.id} />)     \n        ), [todosList]) \n\n    return <DoneUI done={done} />\n}\n\nexport default DoneContainer\n","import React, {memo} from \"react\";\r\n\r\nconst ButtonUI = ({text, classes, className = '', ...rest}) => {\r\n  return <button className={`${classes['button']} ${className}`} {...rest}>\r\n    {text}\r\n  </button>\r\n}\r\n\r\nexport default memo(ButtonUI);\r\n","import React from 'react';\r\n\r\nimport ButtonUI from '../ui/ButtonUI';\r\n\r\nimport styles from './Button.module.css';\r\n\r\nconst ButtonContainer = (props) => {\r\n  return <ButtonUI classes={styles} {...props}/>;\r\n}\r\n\r\nexport default ButtonContainer;\r\n","import React from 'react';\nimport Modal from 'react-modal';\nimport ButtonContainer from '../../common/Button/functional/ButtonContainer';\nimport { VscAdd } from 'react-icons/vsc';\nimport { VscChromeClose } from 'react-icons/vsc';\nimport TextAreaContainer from '../../common/TextArea/functional/TextAreaContainer';\nimport { TitleConatiner } from '../../common/Title/functional/TitleConatiner';\n\nconst ModalUI = ({ show, closePopup, value, handleAddToDo, handleChangeValue, error, classes }) => {\n    return (\n        <Modal\n            isOpen={show}\n            onRequestClose={closePopup}\n            ariaHideApp={false}\n            className={classes.modal}\n            overlayClassName={classes.modalOverley}>\n            <TitleConatiner value='Add Task' />\n            <form onSubmit={handleAddToDo}>\n                <TextAreaContainer value={value} onChange={handleChangeValue} className={classes.modalTextarea} placeholder='Write something...' />\n                {error && <div>Enter task</div>}\n                <div>\n                    <ButtonContainer text='Save' type='submit' className={classes.buttonAccept} />\n                    <ButtonContainer text='Cancel' onClick={closePopup} className={classes.buttonCancel} />\n                </div>\n            </form>\n        </Modal>\n    )\n}\n\nexport default ModalUI","import {createSelector} from \"reselect\";\n\nconst getModalsSelector = state => state.modal;\n\nexport const getModalSelector = createSelector(getModalsSelector, modal => modal.open);\n","import React, { useCallback, useState } from 'react'\nimport ModalUI from '../ui/ModalUI'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getModalSelector} from '../../../redux/modal/modalSelectors';\nimport {closeModal} from '../../../redux/modal/modalActions';\nimport { addNewItem } from '../../../redux/todosList/todosActions';\nimport { getIdSelector } from '../../../redux/todosList/todosSelectors';\nimport styles from \"./Modal.module.css\";\n\nconst ModalContainer = () => {\n\nconst showModal = useSelector(getModalSelector);\nconst [value, setValue] = useState('');\nconst [error, setError] = useState(false)\nlet id = useSelector(getIdSelector);\nlet currentId = ++id;\n\nconst dispatch = useDispatch();\n\nconst handleCloseModal = useCallback(() => {\n    dispatch(closeModal());\n    setValue('');\n    setError(false);\n  }, [dispatch]);\n\nconst handleChangeValue = useCallback((e) => {\n    setValue(e.target.value);\n    setError(false);\n  }, [setValue]);\n\nconst  handleAddToDo = useCallback((e)=>{\n  e.preventDefault();\n  if(!value){\n      setError(true);\n  }\n  else {\n      dispatch(addNewItem(currentId, value));\n      setValue('');\n      setError(false);\n      dispatch(closeModal());\n  }\n}, [dispatch, value, currentId]) \n\nreturn <ModalUI show={showModal} \n                closePopup={handleCloseModal}\n                value={value}\n                handleChangeValue={handleChangeValue} \n                handleAddToDo={handleAddToDo}\n                error={error}\n                classes= {styles} />\n}\n\nexport default ModalContainer\n","import { Redirect, Route, Switch } from 'react-router-dom';\r\nimport SelectContainer from '../../Select/functional/SelectContainer';\r\nimport { routes } from '../../../constans/routes';\r\nimport { TitleConatiner } from '../../common/Title/functional/TitleConatiner';\r\nimport ToDoContainer from '../../ToDo/functional/ToDoContainer';\r\nimport InProcessContainer from '../../InProcess/functional/InProcessContainer';\r\nimport DoneContainer from '../../Done/functional/DoneContainer';\r\nimport ModalContainer from '../../Modal/functional/ModalContainer';\r\nimport ButtonContainer from '../../common/Button/functional/ButtonContainer';\r\n\r\nconst AppUI = ({ handleOpenModal, mobileScreen }) => {\r\n\r\n  return (\r\n    <>\r\n      <ButtonContainer text='+ Task' onClick={handleOpenModal} className='buttonFixed' />\r\n      <h1 className='main-title'>TODO APP</h1>\r\n      { mobileScreen ? (\r\n        <>\r\n          <SelectContainer />\r\n          <Switch>\r\n            <Route exact path={routes.todo} component={ToDoContainer} />\r\n            <Route exact path={routes.inProcess} component={InProcessContainer} />\r\n            <Route exact path={routes.done} component={DoneContainer} />\r\n            <Redirect to={routes.todo} component={ToDoContainer} />\r\n          </Switch>\r\n        </>\r\n        )\r\n        :\r\n        (\r\n          <div className=\"wrapper\">\r\n            <div>\r\n              <TitleConatiner value='TODO' />\r\n              <ToDoContainer />\r\n            </div>\r\n            <div>\r\n              <TitleConatiner value='IN PROCESS' />\r\n              <InProcessContainer />\r\n            </div>\r\n            <div>\r\n              <TitleConatiner value='DONE' />\r\n              <DoneContainer />\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n      <ModalContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppUI;\r\n","import { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useMedia } from '../../../hook/useMedia';\r\nimport { openModal } from '../../../redux/modal/modalActions';\r\nimport AppUI from '../ui/AppUI';\r\nimport './App.css';\r\n\r\nconst AppContainer = () => {\r\n\r\n  const matches560 = useMedia('(max-width: 560px)');\r\n\r\n  const dispatch = useDispatch();\r\n  const handleOpenModal = useCallback(() => {\r\n    dispatch(openModal())\r\n  }, [dispatch]);\r\n\r\n\r\n  return <AppUI handleOpenModal= {handleOpenModal} mobileScreen= {matches560} />\r\n}\r\n\r\nexport default AppContainer;\r\n","import {useCallback, useEffect, useState} from \"react\";\n\nexport const useMedia = (match) => {\n  const [matched, setMatched] = useState(false);\n\n  const handleChange = useCallback(e => {\n    setMatched(e.matches);\n  }, []);\n\n  useEffect(() => {\n    let matched = null;\n    if (window.matchMedia) {\n      matched = window.matchMedia(match)\n      if (matched) {\n        setMatched(matched.matches);\n        if(matched.addEventListener) {\n          matched.addEventListener('change', handleChange)\n        }\n        return () => {\n          if(matched.removeEventListener) {\n            matched.removeEventListener('change', handleChange);\n          }\n        }\n      }\n    }\n  }, [handleChange, match]);\n  return matched;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppContainer from './components/App/functional/AppContainer';\n\nstore.subscribe(() => {\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <AppContainer />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}